{
    "collab_server" : "",
    "contents" : "#Author: Akshaya Suresh\n\n#install mixed effects models\ninstall.packages(\"lme4\")\nlibrary(lme4)\nlibrary(ggplot2)\n----------------------------SET UP DATA FRAMES---------------------------------------\n\n#read in data\nfull_data=read.csv('/Users/akshayasuresh/Documents/UChicago--MA/Lab/score_plus_demos.csv')\n#check for missing data (demographic info for several rows ~42)\nwhich(!complete.cases(full_data))\n#inspect data\nView(full_data)\n\n#create binary race variable due to small sample sizes for some races\nfull_data$race_binary <- ifelse(full_data$Race == \"Af Am\", c(\"Af Am\"), c(\"Other\"))\n#create threeway race variable\nfull_data$race_triad <- 0\nfull_data$race_triad[full_data$Race == \"Af Am\"] <- \"Af Am\"\nfull_data$race_triad[full_data$Race == \"White\"] <- \"White\"\nfull_data$race_triad[full_data$Race == \"white\"] <- \"White\"\nfull_data$race_triad[full_data$race_triad == 0] <- \"Other\"\n#clean up Prior Schooling variable\nfull_data$Prior.Schooling[full_data$Prior.Schooling == \"N \"] <- \"N\"\nfull_data$Prior.Schooling <- droplevels(full_data)$Prior.Schooling\n\n#calculate date at test column\nfull_data$Birthdate <- as.Date(full_data$Birthdate, format = \"%m/%d/%y\")\nfull_data$date_at_test <- full_data$Birthdate + (full_data$Age*365.25)\n\n#check for common support \ntable(full_data$race_triad, full_data$X.Free.Reduced.lunch)\n\n#add in variable for log of age\nfull_data$log_age <- log(full_data$Age)\nfull_data$square_age <- full_data$Age**2\n\n\n#create subset of data for only the Operations skill scores (Will need to repeat for all other skills as well)\noperations_data <- full_data[ which(full_data$SkillOrd == 1), ]\ncomparing_sets_data <- full_data[ which(full_data$SkillOrd == 2), ]\ncounting_data <- full_data[ which(full_data$SkillOrd == 3), ]\nnumber_id_data <- full_data[ which(full_data$SkillOrd == 4), ]\ncardinality_data <- full_data[ which(full_data$SkillOrd == 5), ]\nmath_vocab_data <- full_data[ which(full_data$SkillOrd == 6), ]\nshape_comp_data <- full_data[ which(full_data$SkillOrd == 7), ]\nmental_rotation_data <- full_data[ which(full_data$SkillOrd == 8), ]\npattern_data <- full_data[ which(full_data$SkillOrd == 9), ]\nspatial_data <- full_data[ which(full_data$SkillOrd == 10), ]\nshape_feat_data <- full_data[ which(full_data$SkillOrd == 11), ]\nshape_know_data <- full_data[ which(full_data$SkillOrd == 12), ]\n\nView(operations_data)\ntable(operations_data$race_triad)\n\n-------------------------------VISUALIZE DATA---------------------------------------\n#try to visualize differences in data\n#differences by race, not so much by gender\nboxplot(Proficiency ~ race_binary, col=c(\"white\",\"lightgray\"),full_data)\nboxplot(Proficiency ~ race_triad, col=c(\"white\",\"lightgray\"),full_data)\nboxplot(Proficiency ~ Gender, col=c(\"white\",\"lightgray\"),full_data)\n\n#differences by gender by Skill\nboxplot(Proficiency ~ Gender, col=c(\"white\",\"lightgray\"),operations_data)\nt.test(operations_data$Proficiency[operations_data$Gender == 'F'],operations_data$Proficiency[operations_data$Gender == 'M'])\n   #repeat for all skills\n\n#differences by race by Skill\nboxplot(Proficiency ~ race_triad, col=c(\"white\",\"lightgray\"),operations_data)\nt.test(operations_data$Proficiency[operations_data$race_triad == 'Af Am'],operations_data$Proficiency[operations_data$race_triad == 'White']) \n\n#loop over all skills\nskillsList <- list(operations_data, cardinality_data, comparing_sets_data, counting_data,\n\t\t\t\t\tmath_vocab_data, mental_rotation_data, number_id_data, pattern_data,\n\t\t\t\t\tshape_comp_data, shape_feat_data, shape_know_data, spatial_data)\noutput <- vector()\nlapply(skillsList, function(x) {\n\tttest <- t.test(x$Proficiency[x$race_triad == 'Af Am' & x$Prior.Schooling== \"Y\"],x$Proficiency[x$race_triad == 'White' & x$Prior.Schooling== \"Y\"])\n\toutput <- c(output, ttest$statistic, ttest$p.value, ttest$estimate)\n})\nprint(output)\n\n#interaction of race and gender, bigger differences in race, still not so much by gender\nboxplot(Proficiency ~ race_binary*Gender, col=c(\"white\",\"lightgray\"),operations_data)\nboxplot(Proficiency ~ race_triad*Gender, col=c(\"white\",\"lightgray\"),operations_data)\n\n#scatter plot by race\ncolor <- as.factor(operations_data$race_triad)\nplot(operations_data$Age, operations_data$Proficiency, pch=19, col=color)\npoints(operations_data$Age, fitted(model_op), col='Blue')\n\n#exploring Prior Schooling variable\n#good variation by race, income, gender, and age by prior schooling\n\n##Include this data as a balance table in the paper\n\ntable(full_data$Prior.Schooling, full_data$race_triad)\ntable(full_data$Prior.Schooling, full_data$X.Free.Reduced.lunch)\ntable(full_data$Prior.Schooling, round(full_data$Age,0))\ntable(full_data$Prior.Schooling, full_data$Gender)\ntable(full_data$School.ID, full_data$Prior.Schooling)\n\n---------------------------------CREATE MODELS---------------------------------------\n\n#initial model with full Race variable and three levels (skill, teacher, school)\n#no variance explained by Skill Level-- I think I did this incorrectly\nmodel = lmer(Proficiency ~ Age + Gender + Race + Prior.Schooling + (1|SkillOrd) + (1|Teacher.ID) + (1|School.ID), data=full_data)\nsummary(model)\n\n#model with binary race variable and three levels\nmodel = lmer(Proficiency ~ Age + Gender + race_binary + Prior.Schooling + (1|SkillOrd) + (1|Teacher.ID) + (1|School.ID), data=full_data)\nsummary(model)\n\n#model with binary race variable and four levels (individual, skill, teacher, school)\nmodel2 = lmer(Proficiency ~ Age + Gender + race_binary + Prior.Schooling + (1|ID) + (1|SkillOrd) + (1|Teacher.ID) + (1|School.ID), data=full_data)\nsummary(model2)\n\n\n#now only need 2 levels (teacher, school), keep the binary race variable\nmodel3 = lmer(Proficiency ~ Age + Gender + race_binary + Prior.Schooling + (1|Teacher.ID) + (1|School.ID), data=operations_data)\nsummary(model3)\n\n#check residuals to see if assumption of linearity/homoskedasticity holds\nplot(fitted(model),residuals(model))\nplot(fitted(model2),residuals(model2))\n#maybe doesn't hold here? try log of age?\nplot(fitted(model3),residuals(model3))\n\n#add in variable for log of age\noperations_data$log_age <- log(operations_data$Age)\nmodel4 = lmer(Proficiency ~ Age + log_age + Gender + race_binary + Prior.Schooling + (1|Teacher.ID) + (1|School.ID), data=operations_data)\n#log_age seems to be a stronger predictor\nsummary(model4)\n#doesn't seem to be much difference in plot. Still looks like heteroskedasticity.\nplot(fitted(model4),residuals(model4))\n\n#use income proxy as a predictor\nmodel_op = lmer(Proficiency ~ Age + square_age + log_age + Gender + race_triad + Prior.Schooling + X.Free.Reduced.lunch + (1|Teacher.ID) + (1|School.ID), data=operations_data)\n#school ID becomes unimportant, income is very predictive\nsummary(model_op)\noperations_data$fit <- predict(model_op)\n\n---------------------------------PLOT MODEL RESULTS---------------------------------------\n\n#plot model predictions and trends\nggplot(data = operations_data, mapping = aes(x = Age, y = fit)) + geom_point(mapping = aes(color = race_binary)) + geom_smooth(mapping = aes(color = race_binary), se = FALSE)\noperations_data$fit <- predict(model_op)\n\nmodel_car = lmer(Proficiency ~ Age + square_age + log_age + Gender + race_triad + Prior.Schooling + X.Free.Reduced.lunch + (1|Teacher.ID) + (1|School.ID), data=cardinality_data)\ncardinality_data$fit <- predict(model_car)\nggplot(data = cardinality_data, mapping = aes(x = Age, y = fit)) + geom_point(mapping = aes(color = race_triad)) + geom_smooth(mapping = aes(color = race_triad), se = FALSE)\n\nmodel_cs = lmer(Proficiency ~ Age + square_age + log_age + Gender + race_triad + Prior.Schooling + X.Free.Reduced.lunch + (1|Teacher.ID) + (1|School.ID), data=comparing_sets_data)\ncomparing_sets_data$fit <- predict(model_cs)\nggplot(data = comparing_sets_data, mapping = aes(x = Age, y = fit)) + geom_point(mapping = aes(color = race_triad)) + geom_smooth(mapping = aes(color = race_triad), se = FALSE)\n\n#P-values\ncoefs <- data.frame(coef(summary(model_cs)))\ncoefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))\ncoefs\n\nsavehistory(\"~/Documents/UChicago--MA/Lab/Analysis.Rhistory\")\n",
    "created" : 1528164501644.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3246298206",
    "id" : "8CA71330",
    "lastKnownWriteTime" : 1528164516,
    "last_content_update" : 1528164516339,
    "path" : "~/Desktop/Projects/MA-Thesis.r",
    "project_path" : "MA-Thesis.r",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}